{{- if .Values.deployment.blue.enabled }}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.deployment.blue.client.image.tag}}-client-blue
  labels:
    app.kubernetes.io/name: {{ include "backend.name" . }}
    helm.sh/chart: {{ include "backend.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if eq .Values.deployment.prod "blue" }}
  replicas: {{ .Values.deployment.blue.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "backend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "backend.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        track: blue
        service: client
    spec:
      volumes:
        - name: tls
          secret:
            secretName: backend-certs
      containers:
        - name: {{ .Release.Name}}
          image: "{{ .Values.deployment.blue.client.image.repository }}:{{ .Values.deployment.blue.client.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
          volumeMounts:
            - name: tls
              mountPath: /etc/certs
          env:
            {{- range .Values.client.blue.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
            - name: TLS
              value: "f"
{{- end }}
{{- if .Values.deployment.green.enabled }}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.deployment.green.client.image.tag}}-client-green
  labels:
    app.kubernetes.io/name: {{ include "backend.name" . }}
    helm.sh/chart: {{ include "backend.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if eq .Values.deployment.prod "green" }}
  replicas: {{ .Values.deployment.green.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "backend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "backend.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        track: green
        service: client
    spec:
      volumes:
        - name: tls
          secret:
            secretName: backend-certs
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.deployment.green.client.image.repository }}:{{ .Values.deployment.green.client.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
          volumeMounts:
            - name: tls
              mountPath: /etc/certs
          env:
            {{- range .Values.client.green.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
            - name: TLS
              value: "y"
{{- end }}
