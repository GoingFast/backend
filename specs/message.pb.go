// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageResponse struct {
	ServerHostname       string   `protobuf:"bytes,1,opt,name=serverHostname,proto3" json:"serverHostname,omitempty"`
	ClientHostname       string   `protobuf:"bytes,2,opt,name=clientHostname,proto3" json:"clientHostname,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Version              string   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageResponse) Reset()         { *m = MessageResponse{} }
func (m *MessageResponse) String() string { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()    {}
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}
func (m *MessageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageResponse.Unmarshal(m, b)
}
func (m *MessageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageResponse.Marshal(b, m, deterministic)
}
func (dst *MessageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageResponse.Merge(dst, src)
}
func (m *MessageResponse) XXX_Size() int {
	return xxx_messageInfo_MessageResponse.Size(m)
}
func (m *MessageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MessageResponse proto.InternalMessageInfo

func (m *MessageResponse) GetServerHostname() string {
	if m != nil {
		return m.ServerHostname
	}
	return ""
}

func (m *MessageResponse) GetClientHostname() string {
	if m != nil {
		return m.ClientHostname
	}
	return ""
}

func (m *MessageResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MessageResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*MessageResponse)(nil), "message.MessageResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageServiceClient is the client API for MessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageServiceClient interface {
	Message(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MessageResponse, error)
}

type messageServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageServiceClient(cc *grpc.ClientConn) MessageServiceClient {
	return &messageServiceClient{cc}
}

func (c *messageServiceClient) Message(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := c.cc.Invoke(ctx, "/message.MessageService/Message", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageServiceServer is the server API for MessageService service.
type MessageServiceServer interface {
	Message(context.Context, *empty.Empty) (*MessageResponse, error)
}

func RegisterMessageServiceServer(s *grpc.Server, srv MessageServiceServer) {
	s.RegisterService(&_MessageService_serviceDesc, srv)
}

func _MessageService_Message_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).Message(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.MessageService/Message",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).Message(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.MessageService",
	HandlerType: (*MessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Message",
			Handler:    _MessageService_Message_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x8f, 0xcd, 0x0a, 0x82, 0x40,
	0x14, 0x46, 0xb3, 0x3f, 0x69, 0x20, 0x83, 0x21, 0x62, 0xb0, 0x4d, 0xb8, 0x88, 0x56, 0x23, 0xd4,
	0xba, 0x65, 0xd0, 0x26, 0x02, 0x7b, 0x02, 0x95, 0x9b, 0x0c, 0xe8, 0x8c, 0xcc, 0x9d, 0x84, 0x1e,
	0xa3, 0x37, 0x0e, 0x67, 0x34, 0xc8, 0xe5, 0x77, 0xee, 0x59, 0xdc, 0x43, 0x96, 0x15, 0x20, 0xa6,
	0x05, 0xf0, 0x5a, 0x2b, 0xa3, 0xa8, 0xdf, 0xcd, 0x70, 0x5b, 0x28, 0x55, 0x94, 0x10, 0x5b, 0x9c,
	0xbd, 0x9e, 0x31, 0x54, 0xb5, 0x79, 0x3b, 0x2b, 0xfa, 0x78, 0x64, 0x75, 0x73, 0x62, 0x02, 0x58,
	0x2b, 0x89, 0x40, 0xf7, 0x24, 0x40, 0xd0, 0x0d, 0xe8, 0xab, 0x42, 0x23, 0xd3, 0x0a, 0x98, 0xb7,
	0xf3, 0x0e, 0x8b, 0x64, 0x40, 0x5b, 0x2f, 0x2f, 0x05, 0x48, 0xf3, 0xf3, 0xc6, 0xce, 0xfb, 0xa7,
	0x74, 0x4d, 0x66, 0x46, 0x98, 0x12, 0xd8, 0xc4, 0x9e, 0xdd, 0xa0, 0x8c, 0xf8, 0x0d, 0x68, 0x14,
	0x4a, 0xb2, 0xa9, 0xe5, 0xfd, 0x3c, 0xde, 0x49, 0xd0, 0xbd, 0xf4, 0x00, 0xdd, 0x88, 0x1c, 0xe8,
	0x99, 0xf8, 0x1d, 0xa1, 0x1b, 0xee, 0x72, 0x78, 0x9f, 0xc3, 0x2f, 0x6d, 0x4e, 0xc8, 0x78, 0x9f,
	0x3f, 0xc8, 0x89, 0x46, 0xd9, 0xdc, 0xba, 0xa7, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x47,
	0x06, 0xec, 0x22, 0x01, 0x00, 0x00,
}
